#! env ylc -i

%include examples/Array
%include engine/bindings/Sched
%include engine/bindings/MIDI
%include engine/bindings/Synth
%include examples/Math

let st = (fn () -> 
  let f = inlet 58. |> lag_node 0.01;
  let trig = inlet 0.0;
  let chirp_decay = inlet 0.3;
  let ff = chirp_node 3000. 300. chirp_decay trig; 

  let x = (sq_node f 
  + (sq_node (f * 1.01))
  + (sq_node (f * 2)))

  |> biquad_lp_node ff (inlet 4.)
  ;

  x * asr_node 0.1 1. 0.5 trig
  # |> comb_node 0.75 0.75 0.2
  ;)
  |> compile_blob_template;


let s = fn freq offset ->
  st
  |> instantiate_template [ (0, freq) ]
  |> play_node_offset offset
;;


let x = array_fill 128 (fn i -> s (midi_to_freq i) 0;);

register_note_on_handler (fn midi_note vel ->
  set_input_scalar_offset (x @ midi_note) 1 0 1.;
();) 0;

register_note_off_handler (fn midi_note vel ->
  set_input_scalar_offset (x @ midi_note) 1 0 0.;
();) 0;


