import synths/Hihat;
import synths/Kick;
import synths/Snare;
open engine/bindings/Sched;
open engine/bindings/Synth;

let q = 60./130.;

defer_quant (q * 2.) (fn t ->
  iter_of_list [
    1.5,
    1.5,
    0.75,
    1.5,
    0.25,
    0.5,
    1.5,
    0.5,
  ]
  |> cor_loop
  |> cor_map ((*) q)
  |> (Kick.set_pattern) t
  ;

  iter_of_list [
    0.25
  ]
  |> cor_loop
  |> cor_map ((*) q)
  |> (Hihat.set_pattern) t
  ;

  iter_of_list [
  (0, 1.), (1, 1.), (0, 1.), (1, 0.75), (1, 0.25),
  (0, 1.), (1, 1.), (0, 1.), (1, 0.75), (1, 0.25),
  (0, 1.), (1, 1.), (0, 1.), (1, 0.75), (1, 0.25),
  (0, 1.), (1, 1.), (0, 1.), (1, 0.25), (1, 0.5), (1, 0.25)
  ]
  |> cor_loop
  |> cor_map (fn (p, d) -> (p, d * q);)
  |> (Snare.set_pattern) t;
);



(
  import gui/bindings/Gui;

  let sig = node_out (Kick.ampenv);
  Gui.create_envelope_edit_view
    (sig_size sig)
    (sig_raw sig);
  Gui.create_scope (ctx_main_out ()) 2 512

);
