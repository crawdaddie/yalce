%test

let finite_cor = fn () ->
  yield 1;
  yield 2;
  yield 3
;;

let loop = fn c arg ->
  yield (c arg);
  yield loop c arg
;;

let test_recursive_cor = fn () ->
  let inst = loop finite_cor ();
  (match inst () with
  | Some 1 -> true
  | _ -> false
  ) && (
  match inst () with
  | Some 2 -> true
  | _ -> false
  ) && (
  match inst () with
  | Some 3 -> true
  | _ -> false
  ) && (
  match inst () with
  | Some 1 -> true
  | _ -> false
  ) && (
  match inst () with
  | Some 2 -> true
  | _ -> false
  )
;;


