%include ../testing

let x = [|
  [|1., 2.|],
  [|3., 4.|],
  [|5., 6.|],
|];

test_val (array_at (array_at x 0) 0 == 1.) "array[0][0] == 1."; 
test_val (array_at (array_at x 0) 1 == 2.) "array[0][1] == 2.";
test_val (array_at (array_at x 1) 0 == 3.) "array[1][0] == 3.";
test_val (array_at (array_at x 1) 1 == 4.) "array[1][1] == 4.";

let (@) = fn array idx -> array_at array idx;;

test_val (x @ 0 @ 0 == 1.) "array[0][0] == 1."; 
test_val (x @ 0 @ 1 == 2.) "array[0][1] == 2.";
test_val (x @ 1 @ 0 == 3.) "array[1][0] == 3.";
test_val (x @ 1 @ 1 == 4.) "array[1][1] == 4.";
test_val (x @ 2 @ 0 == 5.) "array[2][0] == 5.";
test_val (x @ 2 @ 1 == 6.) "array[2][1] == 6.";
test_val (array_size x == 3) "len of array == 3";

let rand_int = extern fn Int -> Int ;
let choose = fn arr ->
  arr @ (rand_int (array_size arr))
;;
# let xx = [|
#   (1,2),
#   (2,3),
#   (1,2),
# |];
#
# test_val (xx @ 1 == (2, 3)) "array of tuples"
