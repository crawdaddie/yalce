#! env ylc -i

open ../engine/bindings/Sched;
open ../engine/bindings/MIDI;
open ../engine/bindings/Synth;
open Math;

let st = (fn () -> 
  let f = inlet 58.;
  let trig = inlet 0.0;
  let chirp_decay = inlet 0.3;
  let ff = chirp_node 5. 0.2 chirp_decay trig; 

  let x =
      (pm_node f ff 4.) 
    + (pm_node (f * 1.01) ff 4.)
  in

  x * asr_node 0.001 1. 0.5 trig
  ;)
  |> compile_blob_template;


let s = fn freq offset ->
  st
  |> instantiate_template [ (0, freq) ]
  |> play_node_offset offset
;;


let x = array_fill 128 (fn i -> s (midi_to_freq i) 0;);

register_note_on_handler (fn midi_note vel ->
  let fo = get_frame_offset () in (
    set_input_scalar_offset (array_at x midi_note) 1 fo 1.;
    set_input_scalar_offset (array_at x midi_note) 2 fo (vel + 0.01)
  );
) 0;

register_note_off_handler (fn midi_note vel ->
  let fo = get_frame_offset () in 
    set_input_scalar_offset (array_at x midi_note) 1 fo 0.
  ;
) 0;


