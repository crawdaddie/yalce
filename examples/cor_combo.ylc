#! env ylc
%include Array
%include Math
%include ../engine/bindings/Sched
%include ../engine/bindings/Synth


let synth = fn () -> 
  let f = inlet 58.
  |> lag_node 0.005
  in
    sq_node f
    + sq_node (f * 1.01)
    + sq_node (f * 2.)
;;

let Wrap = cor_wrap_effect;
let Map = cor_map;
let Play = cor_play;


let times = [| 0.125, 0.125, 0.25, 0.5 |];

let co = (

  # dur must be first field of struct
  dur: \array_choose times,

  # frame_offset must be second field of struct
  frame_offset: 0,

  freq: iter_of_list [55., 330., 220., 110.] |> cor_loop,

  target: synth |> chain_wrap |> play,
)
|> Wrap (fn (dur, frame_offset, freq, target) ->
  set_input_scalar_offset target 0 frame_offset freq;
  ()
;)
in co |> Play schedule_event
