#! env ylc
%include Array
%include ../engine/bindings/Sched
%include ../engine/bindings/Synth
%include Math


let st = (fn () -> 
  let f = inlet 58.;
  sin_node f
;) |> compile_blob_template;


let s = fn freq offset ->
  st
  |> instantiate_blob_template_w_args [freq]
  |> play_node_offset offset
;;

let times = [| 0.125, 0.125, 0.25, 0.5 |];
# let times = [| 0.125, 0.125, |];

let co = (

  # dur must be first field of struct
  dur: \array_choose times,

  # frame_offset must be second field of struct
  frame_offset: get_frame_offset,

  freq: iter_of_list [55., 330., 220., 110., 44., 33., 55., 110., 220., 660.] |> cor_loop,

  target: s 0
    # synth |> chain_wrap |> play
  # ),
)
|> cor_wrap_effect (fn (dur, frame_offset, freq, s) ->
  set_input_scalar_offset s 0 frame_offset freq;
  ()
;)
in co |> cor_play schedule_event;

