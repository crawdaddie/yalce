#! env ylc
%include Array
%include ../engine/bindings/Sched
%include ../engine/bindings/Synth
%include Math


let synth = fn () -> 
  let f = inlet 58. |> lag_node 0.01;
  (
    sq_node f
  + sq_node (f * 1.01)
  )
  |> comb_node 0.125 0.2 0.6
;;

let times = [| 0.125, 0.125, 0.25, 0.5 |];
# let times = [| 0.125, 0.125, |];

(

  # dur must be first field of struct
  dur: \array_choose times,

  # frame_offset must be second field of struct
  frame_offset: get_frame_offset,

  freq: iter_of_list [55., 330., 220., 110., 44., 33., 55., 110., 220., 660.] |> cor_loop,

  target: 
    synth |> chain_wrap |> play,
    # synth |> chain_wrap |> play
  # ),
)
|> cor_wrap_effect (fn (dur, frame_offset, freq, s) ->
  set_input_scalar_offset s 0 frame_offset freq;
  ()
;)
|> cor_play schedule_event;

