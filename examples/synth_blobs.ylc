%include ../engine/bindings/Synth
%include ../engine/bindings/Sched
%include Array
%include Math

let synth_tpl = (fn () ->
  let f = inlet 100.;
  let g = inlet 1.;
  (asr_node 0.001 1. 0.5 g) * sin_node f
  ;)
  |> compile_blob_template;



let s = fn freq dur offset ->
  synth_tpl
  |> instantiate_template [(0, freq)]
  |> play_node_offset_w_kill offset dur 1
;;

(
  dur: iter_of_list [ 0.125, 0.125, 0.125, 0.25, ] |> cor_loop,
  frame_offset: get_frame_offset,
  freq: iter_of_list [ 55., 330., 220., 110., 44., 33., 55. ] |> cor_loop,
) |> cor_wrap_effect (fn (dur, frame_offset, freq) ->
  s freq dur frame_offset;
  ()
;) |> cor_play schedule_event;

