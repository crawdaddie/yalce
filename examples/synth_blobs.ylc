%include ../engine/bindings/Synth
%include ../engine/bindings/Sched
%include Array
%include Math

let synth_tpl = (fn () ->
  let f = inlet 100.;
  let s =
      (sq_node f)
    + (sq_node (f * 1.02))
    + (sq_node (f * 1.01))
  ;

  # gate ->   env                   -> mul sig
  inlet 1. |> asr_node 0.05 1. 0.5 |> (*) s;
  )
  |> compile_blob_template;


let s = fn freq dur offset ->
  synth_tpl
  |> instantiate_template [(0, freq)]
  |> play_node_offset_w_kill offset dur 1
;;

(
  dur: iter_of_list [ 0.5, 0.25, 0.125, 0.25, 0.125, 0.75 ] |> cor_loop,
  frame_offset: get_frame_offset,
  freq: iter_of_list [ 55., 330., 220., 110., 44., 880., 660.] |> cor_loop,
) |> cor_wrap_effect
  (fn (dur, frame_offset, freq) ->
    s freq dur frame_offset;
    ()
  ;)
  |> cor_play schedule_event;
