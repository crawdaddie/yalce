#! env ylc
%include String
%include ../engine/bindings/Synth
%include ../engine/bindings/MIDI
%include ../engine/bindings/Sched
%include Math
%include Array
%include Gui

let tbl_ptr = double_array_init 512 0.;

let additive = fn () -> 
  let f = inlet 50.;
  let ff = inlet 500.;
  let res = inlet 8.;
  let osc_tbl = signal_of_ptr 512 tbl_ptr;
  (0.5 * ((raw_osc_node osc_tbl f) +
  (raw_osc_node osc_tbl @@ f * 1.01)))
  |> biquad_lp_node ff res
;;



let a = additive |> chain_wrap |> play;

create_array_editor 512 tbl_ptr;

let freq_setter = fn val: (Int) ->
  let v = unipolar_scale 20. 500. (val * REC_127);
  set_input_scalar a 0 v
;;

register_cc_handler freq_setter 0 22;

let filter_freq_setter = fn val: (Int) ->
  let v = unipolar_scale 100. 2000. (val * REC_127);
  set_input_scalar a 1 v
;;

let filter_res_setter = fn val: (Int) ->
  let v = unipolar_scale 1. 15. (val * REC_127);
  set_input_scalar a 2 v
;;

register_cc_handler filter_freq_setter 0 23;
register_cc_handler filter_res_setter 0 24;
create_scope ()
