#! env ylc
%include Array
%include ../engine/bindings/Sched
%include ../engine/bindings/Synth
%include Math


let st = (fn () -> 
  let f = inlet 58. |> lag_node 0.01;
  let trig = inlet 0.0;
  let chirp_decay = inlet 0.3;
  let ff = chirp_node 3000. 200. chirp_decay trig; 
  let mod_freq = inlet 58. |> lag_node 0.02; 

  (sq_node f) +
  (sq_node (f * 1.01)) +
  (sq_node (f * 2))
  |> biquad_lp_node ff (inlet 4.)
  |> dyn_comb_node (0.125 + 0.008 * sin_node mod_freq) 0.8 0.3
  ;)
  |> compile_blob_template;


let s = fn freq offset ->
  st
  |> instantiate_template [(0, freq)]
  |> play_node_offset offset
;;

let times = [| 0.125, 0.125, 0.125, 0.125, 0.5, 0.75|];
# let times = [| 0.25, |];



let h = fn frame_offset ->
  (
    dur: \array_choose times,
    target: s 55. 0,
    freq: iter_of_list
      [55., 330., 220., 110., 44., 33., 55., 110., 220., 660.]
      |> cor_loop,


    mf: \array_choose [|330., 110., 220., 440., 660.,|],

  )
  |> run_in_scheduler schedule_event
  (fn (dur, s, freq, m) frame_offset ->
    set_input_scalar_offset s 0 frame_offset freq;
    set_input_scalar_offset s 3 frame_offset m;
    set_input_trig_offset s 1 frame_offset;
    ();
  )
;;

let ksamp = load_soundfile @@ cstr "/Users/adam/Desktop/STRANJAH-FREE-SAMPLE-PACK-VOL-1/kicks/STRANJAH_1_KICK_04.wav";

let kick_tpl = (
  fn () -> 
    let trig = inlet 0.0;
    bufplayer_trig_node (inlet 1.) 2. 0. trig
    |> tanh_node 1.5
    |> mul2_node 8.
    ;
)
|> compile_blob_template ;

let kick_syn = fn offset ->
  kick_tpl
  |> instantiate_template [(0, 0.)]
  |> set_input_buf_immediate 1 ksamp
  |> play_node_offset offset
;;


let kick_setter = fn (dur, synth) frame_offset -> 
  set_input_trig_offset synth 0 frame_offset;
  ()
;;

let k = fn frame_offset -> 
  (
    \array_choose [|0.5,|],
    # \array_choose times,
    kick_syn frame_offset,
  ) |> run_in_scheduler schedule_event kick_setter
;;


defer_quant 1. h;
defer_quant 1. k;
  
