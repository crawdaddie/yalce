#! /usr/bin/env ylc --gui -i
open ../gui/bindings/Gui;
import ../lib/Math;

let triangle_vertices = [|
    # positions         # colors
    0.0,  0.5,   0.0,   1.0, 0.0, 0.0, # top vertex (red)
    -0.5, -0.5,  0.0,   0.0, 1.0, 0.0, # bottom left (green)
    0.5,  -0.5,  0.0,   1.0, 0.0, 1.0, # bottom right (magenta)
|];


let triangle_renderer = extern fn Ptr -> ();

let gl_clear = extern fn Double -> Double -> Double -> Double -> ();
let gl_bind_triangles = extern fn Ptr -> ();
let gl_use_program = extern fn Ptr -> ();

let w = create_opengl_window (fn x ->
  gl_clear 0.2 0.3 0.3 1.;
  gl_use_program x;
  gl_bind_triangles x
) (
`#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aColor;
out vec3 vertexColor;
void main() \{
  gl_Position = vec4(aPos, 1.0);
  vertexColor = aColor;
\}` |> cstr
) (
`#version 330 core
in vec3 vertexColor;
out vec4 FragColor;
void main() \{
  FragColor = vec4(vertexColor, 1.0);
\}`
|> cstr
)
3 (cstr triangle_vertices);

