#! /Users/adam/projects/sound/yalce/build/lang
%include Synth
%include Fmt
%include Math
%include Array

let schedule_event = extern fn Ptr -> Double -> Ptr -> ();

let chirp = fn () -> 
  let trig = inlet 0.1;
  let ch = chirp_node 1000. 55. 0.08 trig;
  sin_node ch
  |> tanh_node 5.
  # |> biquad_lp_node 100. 4.
;;

let x = chirp |> chain_wrap |> play;

# let set_synth_param = fn syn p offset v ->
#   match p with
#   | Scalar i -> set_input_scalar_offset syn i offset v
#   | Trig i -> set_input_trig_offset syn i offset 
# ;;


let times = [|
  0.125,
  0.125,
  0.25,
  0.5,
  0.75,
|];

let stream_vals = fn (dur, phase): (Double * Double) ->
  ( choose times, phase)
;;

let runner = fn
  args: (Ptr of (Double * Double))
  frame_offset: (Int)
  ->
  let (duration, phase) = *args;
  set_input_trig_offset x 0 frame_offset;

  stream_vals (duration, phase + duration)
  |> schedule_event runner duration
;;



schedule_event runner 0.0 (0.25, 0.0);
