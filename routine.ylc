open engine/bindings/Sched;
open engine/bindings/Synth;
open examples/Math;
open examples/Array;

# let tpl = (
#   fn () -> 
#     let f = inlet 58. |> lag_node 0.02;
#     let pwm = lfnoise_node 4. 0. 1.;
#     (sq_pwm_node f pwm)
#     + (sq_pwm_node (f * (1.0 + (lfnoise_node 0.2 -0.03 0.03))) pwm)
#     + (sq_pwm_node (f * (1.0 + (lfnoise_node 0.2 -0.03 0.03))) pwm)
#     # + (sq_pwm_node (f * 2. * (1.0 + (lfnoise_node 0.2 -0.05 0.05))) pwm)
#     |> biquad_lp_node (lfnoise_node 4. 100. 8000.) 5.  
#     # + (sq_node (f * 2 + (f * 0.05 * sin_node 0.2)))
#     ;
# ) |> compile_blob_template;
#
let tpl = (
  fn () -> 
    let f = inlet 58. |> lag_node 0.02;
    # let pwm = lfnoise_node 4. 0. 1.;
    (saw_node f)
    + (saw_node (f * (1.0 + (lfnoise_node 0.4 -0.03 0.03))))
    + (saw_node (f * (1.0 + (lfnoise_node 0.4 -0.03 0.03))))
    + (saw_node (f * (1.0 + (lfnoise_node 0.4 -0.03 0.03))))
    + (saw_node (f * (1.0 + (lfnoise_node 0.4 -0.03 0.03))))
    # + (sq_pwm_node (f * 2. * (1.0 + (lfnoise_node 0.2 -0.05 0.05))) pwm)
    |> biquad_lp_node (lfnoise_node 4. 100. 8000.) 4.  
    # + (sq_node (f * 2 + (f * 0.05 * sin_node 0.2)))
    ;
) |> compile_blob_template;


let synth = fn offset freq ->
  tpl
  |> instantiate_template [(0, freq)]
  |> play_node_offset offset
;;

let notes = [|60, 62, 63, 65, 67, 68, 70, 75, 48, 36 |];

let times = [|0.125, 0.25, 0.75, 1.|];

let seq = fn x y ->
  let fo = get_frame_offset () in (
    midi_to_freq (array_choose notes) |> set_input_scalar_offset x 0 fo;
    midi_to_freq (array_choose notes) |> set_input_scalar_offset y 0 fo
  );
  
  yield (array_choose times);
  yield (seq x y)
;;

let routine = fn scale ->
  
  let fo = get_frame_offset ();
  let x = synth fo (midi_to_freq 60);
  let y = synth fo (midi_to_freq 63);
  yield scale * 1.;

  let fo = get_frame_offset () in (
    midi_to_freq 62 |> set_input_scalar_offset x 0 fo;
    midi_to_freq 65 |> set_input_scalar_offset y 0 fo
  );
  yield scale * 0.5;

  let fo = get_frame_offset () in (
    midi_to_freq 68 |> set_input_scalar_offset x 0 fo;
    midi_to_freq 65 |> set_input_scalar_offset y 0 fo
  );
  yield scale * 1.;

  let fo = get_frame_offset () in (
    midi_to_freq 70 |> set_input_scalar_offset x 0 fo;
    midi_to_freq 36 |> set_input_scalar_offset y 0 fo
  );
  yield scale * 1.;
  yield seq x y
;;
play_routine schedule_event (routine 0.25);

open gui/bindings/Gui;
create_scope (ctx_main_out ()) 2 512;
