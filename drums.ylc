open examples/Array;
open engine/bindings/Sched;
open engine/bindings/Synth;
open examples/Math;


let x = load_soundfile @@ cstr "amen2.wav";

let play_tpl = (fn () -> 
  let buf = inlet 1.;
  let rate = inlet 1.;
  let sp = inlet 0.;
  let trig = inlet 0.;
  bufplayer_trig_node buf rate sp trig
  ;) |> compile_blob_template;

let geo = fn s ->
  yield s;
  yield geo (s * 1.1)
;;

(
  dur: 1., 
   # /geo 0.0625,
  target: (play_tpl
    |> instantiate_template [(1, 0.)]
    |> set_input_buf_immediate 0 x
    |> play_node)
) |> run_in_scheduler schedule_event_quant 1. # quant 1. these two start at the same time
(fn (dur, target) frame_offset ->
  set_input_scalar_offset target 1 frame_offset 2.;
  set_input_trig_offset target 3 frame_offset;
  ()
;)
;

(
  dur: 1.,
  target: (play_tpl
    |> instantiate_template [(1, 0.)]
    |> set_input_buf_immediate 0 x
    |> play_node)
) |> run_in_scheduler schedule_event_quant 1. # quant 1. these two start at the same time
(fn (dur, target) frame_offset ->
  set_input_scalar_offset target 1 frame_offset 2.
  set_input_trig_offset target 3 frame_offset;
  ()
;)
