# osc.h
let maketable_sin = extern fn () -> ();
let maketable_sq = extern fn () -> ();
let sin_node = extern fn Synth -> Synth;

# ext_lib.h
let start_blob = extern fn () -> ();
let end_blob = extern fn () -> Ptr;
let inlet = extern fn Double -> Synth;

# envelope.h
let asr_node = extern fn Double -> Double -> Double -> Synth -> Synth;

# let chain_wrap = fn def: (() -> Synth) -> 
#   reset_chain ();
#   let x = def () in
#   end_chain x
# ;;

type SynthInput = 
  | Scalar of Int
  | Trig of Int
  ;

let instantiate_template = extern fn List of (Int * Double) -> Ptr -> Synth;


let play_node = extern fn Synth -> Synth;
let play_node_offset = extern fn Int -> Synth -> Synth;
let play_node_offset_w_kill = extern fn Int -> Double -> Int -> Synth -> Synth;

let init_audio = extern fn () -> () in
  init_audio ()

