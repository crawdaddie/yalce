# let chain_wrap = fn def: (() -> Synth) -> 
#   reset_chain ();
#   let x = def () in
#   end_chain x
# ;;

type SynthInput = 
  | Scalar of Int
  | Trig of Int
  ;

let instantiate_template = extern fn List of (Int, Double) -> Ptr -> Synth;


# let play_node = extern fn Synth -> Synth;
# let play_node_offset = extern fn Int -> Synth -> Synth;
let play_node_offset_w_kill = extern fn Int -> Double -> Int -> Synth -> Synth;

let init_audio = extern fn () -> () in
  init_audio ()

