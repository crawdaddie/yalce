#! env ylc
import engine/bindings/MIDI;
open lib/Arrays;
import lib/Math;
open lib/Ref;


let pattern = [|
  (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), 
  (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), 
  (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), 
  (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), 
  (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), 
  (1, 0.), (1, 0.), (1, 0.), (1, 0.), (1, 0.), (1, 0.), (1, 0.), (1, 0.), (1, 0.), (1, 0.), (1, 0.), (1, 0.), (1, 0.), (1, 0.), (1, 0.), (1, 0.), 
  (0, 0.), (1, 0.), (0, 0.), (0, 0.), (1, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (1, 0.), (0, 0.), (0, 0.), (1, 0.), (0, 0.), (0, 0.), (0, 0.), 
  (1, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (1, 0.), (0, 0.), (1, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (0, 0.), (1, 0.), (0, 0.), 
|];

import Launchpad;


let grid_press_handler = fn i: (Int) -> 
  let (status, val) = array_at pattern i;
  match status with 
  | 1 -> array_set i pattern (0, val)
  | 0 -> array_set i pattern (1, val)
;;

let grid_is_set = fn i: (Int) -> 
  match (array_at pattern i) with
  | (1, _) -> true
  | (0, _) -> false
;;

Launchpad.setup 16 grid_press_handler grid_is_set;

let arithmetic = fn s ->
  yield array_fill 8 (fn i -> array_at pattern ((i * 16) + s););
  yield arithmetic ((s + 1) % 16)
;;


# let c = arithmetic 0 in
# print `## arithmetic series:
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# {c ()}
# `


array_stride 16 1 pattern;



  
