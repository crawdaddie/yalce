let _ = dlopen("./libtorch_c_api.dylib");
type Tensor = Ptr;

let at_new_tensor = extern fn () -> Tensor;

let at_tensor_of_data = extern fn (Ptr of Double) -> (Ptr of Int) -> Int -> Int -> Int -> Tensor;
let at_dim = extern fn Tensor -> Int;
let at_shape = extern fn Tensor -> (Ptr of Int) -> ();

let t = at_tensor_of_data
  (cstr [|1., 2., 3., 4., 5., 6.|])
  (cstr [|2, 3|])
  2 8 7;

print `dim: {at_dim t}\n`;

let shape = array_fill_const 2 0;
at_shape t (cstr shape);
print `shape {shape[0]}, {shape[1]}\n`;


