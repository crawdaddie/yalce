open engine/bindings/Synth;

let chirp_buf = 
  (fn () ->
    let trig = inlet 1.;
    let ff = chirp_node 8000. 55. 0.2 1.; 
    sin_node ff 
  ;)
  |> compile_blob_template
  |> instantiate_template [(0, 1.)]
  |> render_to_buf (512 * 11);


(
  import gui/bindings/Gui;
  let sig = node_out chirp_buf;

  Gui.create_static_plot
    (sig_layout sig)
    (sig_size sig)
    (sig_raw sig)
);


let kick_tpl = (fn () -> 
  bufplayer_trig_node (buf_ref chirp_buf) 1. 1. (inlet 0.)
  ;)
  |> compile_blob_template;

let kick_syn = fn offset ->
  kick_tpl
  |> instantiate_template []
  |> play_node_offset offset
;;


# kick_syn 0;

let amen_samp = load_soundfile @@ cstr "fat_amen_mono_48000.wav";
let trig_rand = (fn () ->
  let freq = inlet 40.; 
  let trig = impulse_node freq;
  let pos = lfnoise_node 1. 0. 1.;
  let r = rand_trig_node trig 0.8 1.5;

  grain_osc_node 32 (buf_ref amen_samp) trig pos 
  (lfnoise_node 3. 0.5 2.)
  0.06  
  |> biquad_lp_node (lfnoise_node 5. 8000. 100.) 10.
  ;) 
  |> compile_blob_template
  |> instantiate_template []
  |> play_node_offset 0;



(
  open gui/bindings/Gui;
  create_scope (ctx_main_out ()) 2 512
)




