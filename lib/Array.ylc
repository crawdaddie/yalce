let (@) = array_at;

# let array_choose = fn arr ->
#   let idx = rand_int (array_size arr);
#   arr @ idx 
# ;;

type Tensor = (Array of t, Array of Int, Array of Int);

let tensor_ndims = fn (_, sizes, _): (Tensor) ->
  array_size sizes
;;

let fold = fn f res a ->
  let len = array_size a in
  match len with
  | 0 -> res
  | _ -> fold f (f res (a @ 0)) (array_succ a) 
;;

  
