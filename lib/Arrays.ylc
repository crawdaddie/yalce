# let array_choose = fn arr ->
#   let idx = rand_int (array_size arr); arr @ idx 
# ;;

let print_arr = fn a: (Array of T) ->
  print "[|"; 
  for i = 0 to array_size a in (
    print `{a[i]}, `
  );
  print "|]\n" 
;;

let fold = fn f: (R -> T -> R) res: (R) a: (Array of T) ->
  let res_ref = [| res |];
  for v = iter a in (
    let r = res_ref[0];
    rs_ref[0] := (f r v)  
  );
  res_ref[0]
;;

let map = fn f: (T -> R) a: (Array of T) ->
  let res = array_fill_const (array_size a) (f (a[0]));
  for i = 1 to (array_size a) in (
    let v = f (a [i]);
    res[i] := v
  );
  res
;;

let foldi = fn f: (Int -> R -> T -> R) res: (R) a: (Array of T) ->
  let res_ref = [| res |];
  for i = 0 to (array_size a) in (
    let r = res_ref [0];
    let v = a [i];
    res_ref[0] := (f i r v)  
  );
  res_ref[0]
;;


let last = fn x: (Array of T) ->
  let len = array_size x in
  x [len - 1]
;;
  
